# Copyright 2019-2020 Apex.AI, Inc., Arm Limited
# All rights reserved.

cmake_minimum_required(VERSION 3.5)
project(ndt_nodes)

find_package(yaml-cpp REQUIRED)
find_package(ament_cmake_auto REQUIRED)

find_package(PCL 1.8 REQUIRED COMPONENTS io)
find_package(OpenMP REQUIRED)
set(OpenMP_FLAGS ${OpenMP_CXX_FLAGS})
set(OpenMP_LIBS gomp)

ament_auto_find_build_dependencies()
include_directories(SYSTEM ${PCL_INCLUDE_DIRS})

set(NDT_MAP_PUBLISHER_NODE_LIB_SRC
  src/map_publisher.cpp
)

set(NDT_MAP_PUBLISHER_NODE_LIB_HEADERS
  include/ndt_nodes/map_publisher.hpp
)

set(NDT_MAP_PUBLISHER_NODE_LIB ndt_map_publisher)
ament_auto_add_library(${NDT_MAP_PUBLISHER_NODE_LIB} SHARED
  ${NDT_MAP_PUBLISHER_NODE_LIB_SRC}
  ${NDT_MAP_PUBLISHER_NODE_LIB_HEADERS}
)
autoware_set_compile_options(${NDT_MAP_PUBLISHER_NODE_LIB})

target_link_libraries(${NDT_MAP_PUBLISHER_NODE_LIB}
  ${PCL_LIBRARIES})

rclcpp_components_register_node(${NDT_MAP_PUBLISHER_NODE_LIB}
  PLUGIN "autoware::localization::ndt_nodes::NDTMapPublisherNode"
  EXECUTABLE ${NDT_MAP_PUBLISHER_NODE_LIB}_exe
)

set(P2D_NDT_LOCALIZER_NODE_LIB_SRC
  src/p2d_ndt_localizer.cpp
  /home/rubis/AutowareAuto/src/rubis_rt/include/rubis_rt/sched_log.hpp
)

set(P2D_NDT_LOCALIZER_NODE_LIB_HEADERS
  include/ndt_nodes/ndt_localizer_nodes.hpp
)

set(P2D_NDT_LOCALIZER_NODE_LIB p2d_ndt_localizer)
ament_auto_add_library(${P2D_NDT_LOCALIZER_NODE_LIB} SHARED
  ${P2D_NDT_LOCALIZER_NODE_LIB_SRC}
  ${P2D_NDT_LOCALIZER_NODE_LIB_HEADERS}
)
autoware_set_compile_options(${P2D_NDT_LOCALIZER_NODE_LIB})

target_link_libraries(${P2D_NDT_LOCALIZER_NODE_LIB}
  ${PCL_LIBRARIES}
  ${OpenMP_LIBS}
)

rclcpp_components_register_node(${P2D_NDT_LOCALIZER_NODE_LIB}
  PLUGIN "autoware::localization::ndt_nodes::P2DNDTLocalizerNodeComponent"
  EXECUTABLE ${P2D_NDT_LOCALIZER_NODE_LIB}_exe
)

# TODO(yunus.caliskan): Remove once #978 is fixed.
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set_target_properties(${P2D_NDT_LOCALIZER_NODE_LIB} PROPERTIES COMPILE_FLAGS "-Og")
else()
  set_target_properties(${P2D_NDT_LOCALIZER_NODE_LIB} PROPERTIES COMPILE_FLAGS "-O3 -ftree-vectorize")
endif()

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()

  add_ros_test(
    test/ndt_map_publisher_launch.test.py
    TIMEOUT "30"
  )
  add_ros_test(
    test/ndt_localizer_launch.test.py
    TIMEOUT "30"
  )

  # gtest
  set(NDT_NODES_TEST ndt_nodes_gtest)

  ament_add_gtest(${NDT_NODES_TEST}
    test/test_map_publisher.cpp
    WORKING_DIRECTORY /tmp)
  autoware_set_compile_options(${NDT_NODES_TEST})
  target_link_libraries(${NDT_NODES_TEST}
    ${NDT_MAP_PUBLISHER_NODE_LIB}
    ${YAML_CPP_LIBRARIES})
endif()

# required for tf2
target_include_directories(${NDT_MAP_PUBLISHER_NODE_LIB} SYSTEM PUBLIC ${tf2_INCLUDE_DIRS})
target_compile_options(${NDT_MAP_PUBLISHER_NODE_LIB} PRIVATE -Wno-sign-conversion -Wno-conversion -Wno-old-style-cast
        -Wno-useless-cast -Wno-double-promotion -Wno-nonnull-compare -Wuseless-cast)

target_include_directories(${P2D_NDT_LOCALIZER_NODE_LIB} SYSTEM PUBLIC
    ${tf2_INCLUDE_DIRS}
    /home/rubis/AutowareAuto/src/rubis_rt/include/
)
target_compile_options(${P2D_NDT_LOCALIZER_NODE_LIB} PRIVATE -Wno-sign-conversion -Wno-conversion -Wno-old-style-cast
        -Wno-useless-cast -Wno-double-promotion -Wno-nonnull-compare -Wuseless-cast)

ament_auto_package(INSTALL_TO_SHARE
  data
  launch
  param
)
